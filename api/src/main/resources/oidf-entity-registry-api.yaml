openapi: 3.0.0
info:
  title: Entity Management API
  description: API for managing entities with configuration details
  version: 0.0.1
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api.example.com/oidf
    description: Registry API server

security:
  - bearerAuth: []

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    trust-mark-subject-record:
      type: object
      description: A representation of an  trust-mark-subject-record.
      properties:
        trust_mark_subject_record_id:
          type: string
          nullable: false
          description: The identity of this trust-mark-subject-record
        issuer:
          type: string
          nullable: false
          description: The identity of the entity issuing the record. This field is required.
        trust_mark_id:
          type: string
          nullable: false
          description: Identity of the trust-mark-id.
        subject:
          type: string
          nullable: false
          description: The identity of the subject associated with the record. This field is required.
        revoked:
          type: boolean
          description: Indicates whether the subject's access has been revoked.
        granted:
          type: string
          format: date-time
          nullable: true
          description: The timestamp when subject is granted, can be in a future date.
        expires:
          type: string
          format: date-time
          nullable: true
          description: The timestamp when the subject will expire.
      required:
        - trust_mark_subject_record_id
        - issuer
        - trust_mark_id
        - subject

    policy-record:
      type: object
      properties:
        name:
          type: string
          description: The name of the Policy. Must match the top node in the policy json string
        policy_record_id:
          type: string
          description: Uniq identifyer for a policy
        policy:
          type: string
          description: The json object describing the Policy
      required:
        - policy_record_id
        - name
        - policy

    entity-record:
      type: object
      description: A representation of an EntityRecord.
      properties:
        entity_record_id:
          type: string
          description: Id of the record, used for delete and update
        issuer:
          type: string
          description: The identity of the entity issuing the record. This field is required.
        subject:
          type: string
          description: The identity of the subject associated with the record. This field is required.
        policy_record_id:
          type: string
          nullable: false
          description: The id of the policy associated with the entity.
        override_configuration_location:
          type: string
          nullable: true
          description: Location of metadata
        hosted_record:
          type: object
          description: Contains details about a hosted record service.
          properties:
            authority_hints:
              type: array
              description: A list of authority hints used in the record.
              items:
                type: string
            trust_mark_sources:
              type: array
              description: A list of sources for trust marks.
              items:
                type: object
                properties:
                  trust_mark_id:
                    type: string
                    nullable: true
                    description: The identifier of the Trust Mark.
                  issuer:
                    type: string
                    nullable: true
                    description: The issuer of the Trust Mark.
        jwks:
          type: object
          description: A JSON Web Key Set (JWKS) containing keys used to verify signed objects.
          properties:
            keys:
              type: array
              description: A list of cryptographic keys in JWKS format.
              items:
                type: object
                additionalProperties: true

      required:
        - entity_record_id
        - issuer
        - subject


paths:
  /registry/v1:
    post:
      summary: Create a new entity
      tags:
        - entities
      requestBody:
        description: Entity to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entity-record'
      responses:
        '201':
          description: Entity created successfully
    get:
      summary: Get all entities
      tags:
        - entities
      responses:
        '200':
          description: A list of entities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/entity-record'

  /registry/v1/{entityRecordId}:
    get:
      summary: Get a specific entity by ID
      tags:
        - entities
      parameters:
        - name: entityRecordId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the entity to retrieve
      responses:
        '200':
          description: Entity details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entity-record'
        '404':
          description: Entity not found
    put:
      summary: Update a specific entity by ID
      tags:
        - entities
      parameters:
        - name: entityRecordId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the entity to update
      requestBody:
        description: Entity data to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entity-record'
      responses:
        '200':
          description: Entity updated successfully
        '404':
          description: Entity not found
    delete:
      summary: Delete a specific entity by ID
      tags:
        - entities
      parameters:
        - name: entityRecordId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the entity to delete
      responses:
        '204':
          description: Entity deleted successfully
        '404':
          description: Entity not found