on:
  workflow_call:
    inputs:
      service-path:
        required: true
        type: string
      frontend-path:
        type: string
      revision-property:
        type: string
        default: revision
jobs:
  docker-ghcr-publish:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - uses: actions/setup-node@v4
      - if: ${{ inputs.frontend-path != '' }}
        run: mkdir -p ${{inputs.service-path}}/src/main/resources/static
      - if: ${{ inputs.frontend-path != '' }}
        run: npm install
        working-directory: ${{inputs.frontend-path}}
      - if: ${{ inputs.frontend-path != '' }}
        run: npm run build
        working-directory: ${{inputs.frontend-path}}
      - if: ${{ inputs.frontend-path != '' }}
        run: cp -r ${{ inputs.frontend-path }}/dist/* ${{inputs.service-path}}/src/main/resources/static
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - run: |
          new_version=`echo $tag | awk -F'v' '{print $2}'`
                    echo "New version is $new_version"
                    mvn versions:set-property -DgenerateBackupPoms=false -Dproperty=${{inputs.revision-property}} -DnewVersion=$new_version --no-transfer-progress
        if: ${{ github.ref_name != '' }}
      # Download and install dependencies with PAT
      - name: Install dependencies
        run: mvn clean install --no-transfer-progress
        env:
          GITHUB_TOKEN: ${{ secrets.SC_ACTION_SECRET }}
          tag: ${{ github.ref_name }}
        # Publish image
      - run: |
          DOCKER_REPO=ghcr.io mvn clean package jib:build -Ddocker.repository=ghcr.io --no-transfer-progress
        working-directory: ${{inputs.service-path}}
        env:
          GITHUB_TOKEN: ${{ secrets.SC_ACTION_SECRET }}
